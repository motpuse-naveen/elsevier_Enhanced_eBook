<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
   
<meta charset="utf-8" />
   
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
   
<title>EPUB: Myosin head movement</title>
   <link rel="stylesheet" type="text/css" href="../css/header_style.css" />
   <link rel="stylesheet" type="text/css" href="../css/style.css" />
   
<script src="../script/jquery-3.6.0.min.js"></script>
   
<script src="../script/img-slider2.js"></script>
   
<script src="../script/jquery-ui.min.js"></script>
   
<script src="../script/ui-touch-punch.js"></script>
   
<script src="../script/slider-a11y.js"></script></head>

<body>
        <main class="zoomimage">
        
<div role="application">
            <header class="header">
                
<div class="zoom-slider">
                    <button class="btn-minus btn-range1" data-dir="minus" type="button" id="zoomOut" aria-label="Zoom out">-</button>
                    
<div class="aria-widget-slider">
                        
<div class="rail" style="width: 90px;">
                        
<div id="imageSlider1" role="slider" tabindex="0" class="thumb" aria-valuemin="0" aria-valuenow="0" aria-valuemax="150" aria-label="Image Scale is 0%" />
                        </div>
                        
<div class="value">0</div>
                     </div>
                    <button class="btn-plus btn-range1" data-dir="plus" id="zoomIn" type="button" aria-label="Zoom In">+</button>
                </div>
            </header>
      
            
<div class="main-image-area neuromuscularfunction">
            
<div class="sr-only" style="position: absolute; left: -9999px;" role="heading" aria-level="1">welcome to Cell division and cell cycle</div>
               
<div class="Nervous-system-main">
               
<div class="inner-image-area" id="inner-image-area">
                    
<div id="img">
                        
<div class="Nervous-system active" id="img-1">
                                <img src="../images/step-setup-img1.png" class="img" alt="Myosin head movement A" />    
                        </div>
                        
<div class="Nervous-system" id="img-2">
                                <img src="../images/step-setup-img2.png" class="img" alt="Myosin head movement B" />
                        </div>
                        
<div class="Nervous-system" id="img-3">
                                <img src="../images/step-setup-img3.png" class="img" alt="Myosin head movement C" />
                        </div>
                        
<div class="Nervous-system" id="img-4">
                                <img src="../images/step-setup-img4.png" class="img" alt="Myosin head movement D" />
                        </div>
                    </div>
               </div>
               </div>
               
<div class="subcaption img-1 active">Phase G1: The cyclin D/Cdk4 complex assembles at the beginning
                  of G1; the cyclin E/Cdk2 complex assembles near the end of G1 as the cell is
                  preparing to cross checkpoint 1 to start DNA synthesis (during S phase).</div>
               
<div class="subcaption img-2">Phase S: The cyclin A/Cdk2 complex assembles as DNA synthesis starts.
               </div>
               
<div class="subcaption img-3">Phase G2: Completion of G2 is indicated by the
                  assembled cyclin A/Cdk1 complex.</div>
                  
<div class="subcaption img-4">Phase Mitosis: A cell crosses checkpoint 2 to initiate mitosis when the
                     cyclin B/Cdk1 complex assembles. The cyclin B/Cdk1 complex is degraded by the 26S proteasome and an
                     assembled cyclin D/Cdk4 marks the start of the G1 phase of a new cell cycle.</div>
               
<div class="slider-tab">
                  
<div class="arrow-mask left">
                     
<div class="arrow-left outer" role="button" aria-label="previous" tabindex="0" />
                  </div>
                  
<div class="arrow-mask right">
                     
<div class="arrow-right outer" role="button" aria-label="next" tabindex="0" />
                  </div>
                  
<div class="Nervous-system-slide">
                     
<div class="slider-track-line">
                        
<div class="track" />
                        
<div id="draggableDot">
                        </div>
                     </div>
                     
<div class="buttonWrapper">
                        
<div class="radio-button-1 tab-marker active" data-id="img-1" tabindex="0" title="Phase G1">
                           
<div class="marker-container-1">
                              
<div class="marker-label-1 marker">1</div>
                           </div>
                        </div>
                        <span class="nrvs-label">G1</span>
                        
<div class="radio-button-2 tab-marker" data-id="img-2" tabindex="0" title="Phase S">
                           
<div class="marker-container-2">
                              
<div class="marker-label-2 marker">2</div>
                           </div>
                        </div>
                        
<div class="label">Phase <span id="selectedPhase" class="value">G1</span></div>
                        <!--<span class="nrvs-label current-step"></span>-->
                        
<div class="radio-button-3 tab-marker" data-id="img-3" tabindex="0" title="Phase G2">
                           
<div class="marker-container-3">
                              
<div class="marker-label-3 marker">3</div>
                           </div>
                        </div>
                        <!--<span class="nrvs-label current-step"></span>-->
                        
<div class="radio-button-4 tab-marker" data-id="img-4" tabindex="0" title="Phase Mitosis">
                           
<div class="marker-container-4">
                              
<div class="marker-label-4 marker">4</div>
                           </div>
                        </div>
                        <span class="nrvs-label">Mitosis</span>
                     </div>
                  </div>
               </div>
            </div>
            
<div id="ariaMessages" class="visually-hidden" aria-live="assertive" />
         
        </div>
    </main><!-- js -->
<script>
    $(document).ready(function(){
        Utils.sliderObjInit();
        $('.btn-range1').on('click keydown', function(e) {
            if ((e.type === 'keydown' &amp;&amp; (e.keyCode === '32' || e.keyCode === '13')) || e.type === 'click') {
                var direction = $(this).data("dir");
                var newZoom = Utils.getNewScaleByDirection(direction);
                Utils.setImageBound();
                Utils.sliderObj.moveSliderTo(newZoom);
                //  Utils.imageScaleChanged(newZoom);
                var msg = "Image Zoomed ";
                msg += direction === "plus" ? "In " : "Out ";
                var rangedZoom = Utils.changeRange(newZoom);
                msg += rangedZoom +"%";
                Utils.ariaAnnounce(msg);
            }
        }); 
        var isSliderDown = false;
         $(".rail, #imageSlider1").mousedown(()=&gt;{
            isSliderDown = true;
         });
         $(window).on('mouseup', (e)=&gt;{
             if (isSliderDown) {
                 if ($(e.target).hasClass('rail')) {
                     setTimeout(() =&gt; {
                        Utils.setImageBound();        
                     }, 100);
                 } else{
                    Utils.setImageBound();
                 }
                 isSliderDown = false;
             }
         });
    });
    // Utility Functions
    (function (app){
        var maxSliderRange = 150;
        var minSliderRange = 0;
        var currentScale = 1;
        var totalSteps = 6;
        var sliderStepSize = maxSliderRange / totalSteps;
        var $imageWrapper = $('#inner-image-area');
        var $img = $("#img");
        var currentSliderVal = 0;
        app.announcementRange = {min: 0, max: 100};
        app.sliderRange = {min: minSliderRange, max: maxSliderRange};
        var sliders = document.getElementById('imageSlider1');
        app.sliderObj = new SliderA11y(sliders);
        var isSliderInit = false;
        app.sliderObjInit = function() {
            if (!isSliderInit) {
                app.sliderObj.init();
            }
        }
        function scaleImage(scaleSliderVal) {
            currentScale = parseFloat(1) + ((parseInt(scaleSliderVal) * 0.01)*4);
            $imageWrapper.css('transform', 'scale(' + currentScale + ')');
            $('#imageSlider1').attr('aria-label', 'Image scale is ' + parseInt(app.changeRange(currentSliderVal)) + '%');
        }
        app.getImageWrapper = function () {
            return $imageWrapper;
        }
        app.$imageSlider = $("#imageSlider");
        app.getSliderMaxRange = function () {
            return maxSliderRange;
        }
        app.getSliderMinRange = function () {
            return minSliderRange;
        }
        app.isZoomed = function () {
            return currentSliderVal &gt; 0;
        }
        app.getCurrentScale = function () {
            return currentScale;
        }
        app.imageScaleChanged = function (scaleSliderValue) {
                scaleImage(scaleSliderValue);
                currentSliderVal = parseInt(scaleSliderValue);
                Utils.unableDisableZoomButtons();
                app.$imageSlider.slider("value", scaleSliderValue);
                $("#sliderInputBox").val(scaleSliderValue);
        }
        app.imageScaleChanged = function (scaleSliderValue) {
            currentSliderVal = parseInt(scaleSliderValue);             
            scaleImage(scaleSliderValue);
            Utils.unableDisableZoomButtons();
        }
        app.getNewScaleByDirection = function (direction) {
                var newZoom = currentSliderVal;
                if (direction == "plus")  {
                    if ((newZoom + sliderStepSize) &lt;= maxSliderRange) { 
                        newZoom += sliderStepSize;
                    } else {
                        newZoom = maxSliderRange;
                    }
                } else {
                    if ((newZoom - sliderStepSize) &gt; minSliderRange) {
                        newZoom -= sliderStepSize;    
                    } else {
                        newZoom = minSliderRange;
                    }
                }
                return newZoom;
        }
        app.unableDisableZoomButtons = function () {
                var $zoomInButton = $('.btn-plus');
                var $zoomOutButton = $('.btn-minus');
                if(currentSliderVal === maxSliderRange) {
                    $zoomInButton.addClass('disabled');
                    $zoomOutButton.removeClass('disabled');
                } else if (currentSliderVal === minSliderRange) {
                    $zoomInButton.removeClass('disabled');
                    $zoomOutButton.addClass('disabled');
                } else {
                    $zoomInButton.removeClass('disabled');
                    $zoomOutButton.removeClass('disabled');
                }
        }
        
        app.setImageBound = function () {
                var $imgParPos = {left: parseInt($imageWrapper.css('left')), top: parseInt($imageWrapper.css('top'))};
                var $imgBoundingBox = $img[0].getBoundingClientRect();
                var $windowWidth = $(window).width();
                var $windowHeight = $(window).height();
                var newTop = $imgParPos.top;
                var newLeft = $imgParPos.left;
                if ($imgParPos.left &gt; ($imgBoundingBox.width / 2) - ($windowWidth/2)) {
                    newLeft = ($imgBoundingBox.width / 2) - ($windowWidth/2);
                }
                if ($imgParPos.left &lt; 0 &amp;&amp; Math.abs($imgParPos.left) &gt; ($imgBoundingBox.width / 2) - ($windowWidth/2)) {
                    newLeft = 0 - (($imgBoundingBox.width / 2) - ($windowWidth/2));
                }
                if ($imgParPos.top &gt; ($imgBoundingBox.height / 2) - ($windowHeight/2)) {
                    newTop = ($imgBoundingBox.height / 2) - ($windowHeight/2);
                }
                if ($imgParPos.top &lt; 0 &amp;&amp; Math.abs($imgParPos.top) &gt; ($imgBoundingBox.height / 2) - ($windowHeight/2)) {
                    newTop = 0 - (($imgBoundingBox.height / 2) - ($windowHeight/2));
                }
                if($imgBoundingBox.width &lt; $(window).width()) {
                    newLeft = 0
                } 
                if($imgBoundingBox.height &lt; $(window).height()) {
                    newTop = 0;
                }
                $imageWrapper.stop().animate({'top': newTop, 'left': newLeft}, 400);
            }
            app.ariaAnnounce = function (msg) {
            console.log(msg);
                if (msg) {
                    $('#ariaMessages').html(msg);
                }
                setTimeout(function () {
                    $('#ariaMessages').html("");
                }, 5000);
            };
            app.changeRange = function (OldValue) {
                OldMax = maxSliderRange;
                OldMin = minSliderRange;
                NewMax = 100;
                NewMin = minSliderRange;
                OldRange = (OldMax - OldMin)  
                NewRange = (NewMax - NewMin)  
                NewValue = (((OldValue - OldMin) * NewRange) / OldRange) + NewMin;
                NewValue = (((OldValue - OldMin) * NewRange) / OldRange) + NewMin;
                return Math.round(NewValue);
            }
        })(Utils = Utils || {});
    var Utils;
        // Utility Functions End
        
        let element = document.getElementById('inner-image-area');
        $(document).ready(function () {
            resize();
            createDraggable();
        });
        window.addEventListener("resize", resize);
        function resize() {
            if (!Utils.isZoomed()) {
                if ($(window).width() &lt;= 640) {
                    Utils.getImageWrapper().find('#img').addClass('resp');
                    console.log(Utils.isZoomed())
                } else {
                    Utils.getImageWrapper().find('#img').removeClass('resp');
                }
            } else {
                Utils.getImageWrapper().find('#img').removeClass('resp');
            }
            // Utils.setImageBound();
            createDraggable()
        }
        Utils.getImageWrapper().dblclick(function () {
            if (!$('.btn-plus').hasClass('disabled')) {
                $('.btn-plus').trigger('click');
            }
        });
        
        function createDraggable() {
            $('#main-image-area').droppable({
                tolerance: 'fit'
            });
            Utils.getImageWrapper().draggable({
                start: function (event, ui) {
                },
                stop: function (event, ui) {
                    Utils.setImageBound();
                },
                drag: function (event, ui) {
                }
            });
        }
    </script>
</body></html>